{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hyejinyang/Desktop/coffeeout-beta/src/components/app-bootstrap/app-bootstrap.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useFonts, NotoSansKR_300Light, NotoSansKR_500Medium, NotoSansKR_700Bold } from \"@expo-google-fonts/noto-sans-kr\";\nexport default function AppBootstrap(_ref) {\n  var children = _ref.children;\n\n  var _useFonts = useFonts({\n    NotoSansKR_700Bold: NotoSansKR_700Bold,\n    NotoSansKR_500Medium: NotoSansKR_500Medium,\n    NotoSansKR_300Light: NotoSansKR_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    function loadSplash() {\n      return _regeneratorRuntime.async(function loadSplash$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 5000);\n              }));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    }\n\n    loadSplash();\n  }, []);\n  return fontLoaded ? React.createElement(React.Fragment, null, children) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"App is loading\"), \" \", children);\n}","map":{"version":3,"sources":["/Users/hyejinyang/Desktop/coffeeout-beta/src/components/app-bootstrap/app-bootstrap.tsx"],"names":["React","useEffect","SplashScreen","useFonts","NotoSansKR_300Light","NotoSansKR_500Medium","NotoSansKR_700Bold","AppBootstrap","children","fontLoaded","loadSplash","preventAutoHideAsync","Promise","resolve","setTimeout","hideAsync","console","warn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA0D,OAA1D;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;;AAEA,SACEC,QADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,kBAJF,QAKO,iCALP;AAWA,eAAe,SAASC,YAAT,OAAqE;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;;AAClF,kBAAmBL,QAAQ,CAAC;AAC1BG,IAAAA,kBAAkB,EAAlBA,kBAD0B;AAE1BD,IAAAA,oBAAoB,EAApBA,oBAF0B;AAG1BD,IAAAA,mBAAmB,EAAnBA;AAH0B,GAAD,CAA3B;AAAA;AAAA,MAAKK,UAAL;;AAMAR,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeS,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUR,YAAY,CAACS,oBAAb,EAFV;;AAAA;AAAA;AAAA,+CAGU,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,uBAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,eAAnB,CAHV;;AAAA;AAAA;AAAA,+CAIUX,YAAY,CAACa,SAAb,EAJV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOIC,cAAAA,OAAO,CAACC,IAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUAP,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOD,UAAU,GACf,0CAAGD,QAAH,CADe,GAGf,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,OAC+BA,QAD/B,CAHF;AAOD","sourcesContent":["import React, { useEffect, ReactNode, ReactElement } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { Text } from \"react-native\";\nimport {\n  useFonts,\n  NotoSansKR_300Light,\n  NotoSansKR_500Medium,\n  NotoSansKR_700Bold\n} from \"@expo-google-fonts/noto-sans-kr\";\n\ntype AppBootstrapProps = {\n  children: ReactNode;\n};\n\nexport default function AppBootstrap({ children }: AppBootstrapProps): ReactElement {\n  let [fontLoaded] = useFonts({\n    NotoSansKR_700Bold,\n    NotoSansKR_500Medium,\n    NotoSansKR_300Light\n  });\n\n  useEffect(() => {\n    async function loadSplash() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n        await new Promise(resolve => setTimeout(resolve, 5000));\n        await SplashScreen.hideAsync();\n\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    loadSplash();\n  }, []);\n\n  return fontLoaded ? (\n    <>{children}</>\n  ) : (\n    <>\n      <Text>App is loading</Text> {children}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}