{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hyejinyang/Desktop/coffeeout-beta/src/components/app-bootstrap/app-bootstrap.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts, NotoSansKR_300Light, NotoSansKR_400Regular, NotoSansKR_500Medium, NotoSansKR_700Bold } from \"@expo-google-fonts/noto-sans-kr\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport default function AppBootstrap(_ref) {\n  var children = _ref.children;\n\n  var _useFonts = useFonts({\n    NotoSansKR_700Bold: NotoSansKR_700Bold,\n    NotoSansKR_500Medium: NotoSansKR_500Medium,\n    NotoSansKR_400Regular: NotoSansKR_400Regular,\n    NotoSansKR_300Light: NotoSansKR_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    function loadSplash() {\n      return _regeneratorRuntime.async(function loadSplash$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 5000);\n              }));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    }\n\n    loadSplash();\n  }, []);\n  return fontLoaded ? React.createElement(React.Fragment, null, children) : React.createElement(ActivityIndicator, {\n    style: styles.container,\n    size: \"large\",\n    color: \"#76A3FF \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/hyejinyang/Desktop/coffeeout-beta/src/components/app-bootstrap/app-bootstrap.tsx"],"names":["React","useEffect","SplashScreen","useFonts","NotoSansKR_300Light","NotoSansKR_400Regular","NotoSansKR_500Medium","NotoSansKR_700Bold","AppBootstrap","children","fontLoaded","loadSplash","preventAutoHideAsync","Promise","resolve","setTimeout","hideAsync","console","warn","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA0D,OAA1D;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SACEC,QADF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,oBALF,EAMEC,kBANF,QAQO,iCARP;;;AAgBA,eAAe,SAASC,YAAT,OAAqE;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;;AAClF,kBAAqBN,QAAQ,CAAC;AAC5BI,IAAAA,kBAAkB,EAAlBA,kBAD4B;AAE5BD,IAAAA,oBAAoB,EAApBA,oBAF4B;AAG5BD,IAAAA,qBAAqB,EAArBA,qBAH4B;AAI5BD,IAAAA,mBAAmB,EAAnBA;AAJ4B,GAAD,CAA7B;AAAA;AAAA,MAAOM,UAAP;;AAOAT,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeU,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUT,YAAY,CAACU,oBAAb,EAFV;;AAAA;AAAA;AAAA,+CAGU,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,uBAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,eAAnB,CAHV;;AAAA;AAAA;AAAA,+CAIUZ,YAAY,CAACc,SAAb,EAJV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIC,cAAAA,OAAO,CAACC,IAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAP,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOD,UAAU,GACf,0CAAGD,QAAH,CADe,GAGf,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAEU,MAAM,CAACC,SADhB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAUD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, ReactNode, ReactElement } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport {\n  useFonts,\n  // NotoSansKR_100Thin,\n  NotoSansKR_300Light,\n  NotoSansKR_400Regular,\n  NotoSansKR_500Medium,\n  NotoSansKR_700Bold\n  // NotoSansKR_900Black\n} from \"@expo-google-fonts/noto-sans-kr\";\n// import { Login } from \"@screens\";\nimport { StyleSheet, ActivityIndicator } from \"react-native\";\n\ntype AppBootstrapProps = {\n  children: ReactNode;\n};\n\nexport default function AppBootstrap({ children }: AppBootstrapProps): ReactElement {\n  const [fontLoaded] = useFonts({\n    NotoSansKR_700Bold,\n    NotoSansKR_500Medium,\n    NotoSansKR_400Regular,\n    NotoSansKR_300Light\n  });\n\n  useEffect(() => {\n    async function loadSplash() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n        await new Promise(resolve => setTimeout(resolve, 5000));\n        await SplashScreen.hideAsync();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    loadSplash();\n  }, []);\n\n  return fontLoaded ? (\n    <>{children}</>\n  ) : (\n    <ActivityIndicator\n      style={styles.container}\n      size=\"large\"\n      color=\"#76A3FF\n    \"\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}